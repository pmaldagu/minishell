opendir, readdir, closedir -- directory operations

#include <dirent.h>

DIR				*opendir(const char *filename);
struct dirent	*readdir(DIR *dirp);
int				closedir(DIR *dirp);


DESCRIPTION
	The opendir() function opens the directory named by filename, associates
	a directory stream with it and returns a pointer to be used to identify
	the directory stream in subsequent operations.  The pointer NULL is
	returned if filename cannot be accessed, or if it cannot malloc(3) enough
	memory to hold the whole thing, and sets the global variable errno to
	indicate the error.

	The readdir() function returns a pointer to the next directory entry.  It
	returns NULL upon reaching the end of the directory or on error.  In the
	event of an error, errno may be set to any of the values documented for
	the getdirentries(2) system call.

	The closedir() function closes the named directory stream and frees the
	structure associated with the dirp pointer, returning 0 on success.  On
	failure, -1 is returned and the global variable errno is set to indicate
	the error.

	Sample code which searches a directory for entry ``name'' is:

		dirp = opendir(".");
		if (dirp == NULL)
			return (ERROR);
		len = strlen(name);
		while ((dp = readdir(dirp)) != NULL)
		{
			if (dp->dnamlen == len && strcmp(dp->dname, name) == 0)
			{
				(void)closedir(dirp);
				return (FOUND);
			}
		}
		(void)closedir(dirp);
		return (NOTFOUND);


RELATED
	close(2), lseek(2), open(2), read(2), dir(5)
